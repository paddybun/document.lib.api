@page "/Folder"
@using document.lib.bl.contracts.Folders
@using document.lib.data.entities

@rendermode InteractiveServer

@inject IFoldersQuery FoldersQuery

@if (_folders != null!)
{
    <RadzenDataGrid @bind-Value="@_selectedFolders" Data="_folders" TItem="Folder">
        <Columns>
            <RadzenDataGridColumn Property="@nameof(Folder.Id)" Title="Id"/>
            <RadzenDataGridColumn Property="@nameof(Folder.DisplayName)" Title="Display Name"/>
            <RadzenDataGridColumn Property="@nameof(Folder.Name)" Title="Name"/>
        </Columns>
    </RadzenDataGrid>
}

@code {
    private List<Folder> _folders = null!;
    private IList<Folder> _selectedFolders = new List<Folder>();
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var foldersResult = await FoldersQuery.ExecuteAsync();
            _folders = foldersResult.IsSuccess ? foldersResult.Value! : [];
            StateHasChanged();
        }
    }
}